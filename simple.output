Terminals unused in grammar

    T_DECLARE
    T_INTEGER
    T_FLOAT


Rules useless in parser due to conflicts

   18 else_stmt: %empty


State 46 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 93 conflicts: 4 reduce/reduce
State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt_list ';'

    2 stmt_list: stmt_list ';' stmt
    3          | stmt

    4 stmt: assignment
    5     | read
    6     | write
    7     | while
    8     | repeat
    9     | block
   10     | foreach
   11     | if_stmt

   12 block: T_BEGIN stmt_list T_END

   13 foreach: T_FOREACH varref T_IN '(' l_expr ':' l_expr ')' stmt_list

   14 while: T_WHILE '(' l_expr ')' repeat

   15 repeat: %empty
   16       | T_REPEAT stmt_list T_UNTIL

   17 if_stmt: T_IF l_expr T_THEN stmt_list T_ELSE else_stmt

   18 else_stmt: %empty
   19          | stmt

   20 assignment: varref T_ASSIGN l_expr

   21 a_expr: a_expr T_ADD a_term
   22       | a_expr T_SUB a_term
   23       | a_term

   24 a_term: a_term T_MUL a_fact
   25       | a_term T_DIV a_fact
   26       | a_fact

   27 a_fact: varref
   28       | T_NUM
   29       | T_LITERAL_STR
   30       | T_SUB a_fact
   31       | '(' a_expr ')'

   32 varref: T_ID
   33       | T_ID '[' a_expr ']'
   34       | T_ID '[' varref ']' '[' a_expr ']'

   35 l_expr: l_expr T_AND l_term
   36       | l_term

   37 l_term: l_term T_OR l_fact
   38       | l_fact

   39 l_fact: a_expr
   40       | l_fact oprel a_expr
   41       | '(' l_fact ')'

   42 oprel: T_LT
   43      | T_GT
   44      | T_LEQ
   45      | T_GEQ
   46      | T_EQ
   47      | T_NEQ

   48 read: T_READ varlist

   49 write: T_WRITE expr_list

   50 varlist: varref
   51        | varref ',' varlist

   52 expr_list: a_expr
   53          | a_expr ',' expr_list


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 14 31 41
    ')' (41) 13 14 31 41
    ',' (44) 51 53
    ':' (58) 13
    ';' (59) 1 2
    '[' (91) 33 34
    ']' (93) 33 34
    error (256)
    T_ID (258) 32 33 34
    T_NUM (259) 28
    T_ADD (260) 21
    T_SUB (261) 22 30
    T_MUL (262) 24
    T_DIV (263) 25
    T_LT (264) 42
    T_GT (265) 43
    T_LEQ (266) 44
    T_GEQ (267) 45
    T_EQ (268) 46
    T_NEQ (269) 47
    T_AND (270) 35
    T_OR (271) 37
    T_READ (272) 48
    T_WRITE (273) 49
    T_ASSIGN (274) 20
    T_BEGIN (275) 12
    T_END (276) 12
    T_FOREACH (277) 13
    T_IN (278) 13
    T_REPEAT (279) 16
    T_UNTIL (280) 16
    T_WHILE (281) 14
    T_IF (282) 17
    T_THEN (283) 17
    T_ELSE (284) 17
    T_DECLARE (285)
    T_INTEGER (286)
    T_FLOAT (287)
    T_LITERAL_STR (288) 29


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    stmt_list (43)
        on left: 2 3
        on right: 1 2 12 13 16 17
    stmt (44)
        on left: 4 5 6 7 8 9 10 11
        on right: 2 3 19
    block (45)
        on left: 12
        on right: 9
    foreach (46)
        on left: 13
        on right: 10
    while (47)
        on left: 14
        on right: 7
    repeat (48)
        on left: 15 16
        on right: 8 14
    if_stmt (49)
        on left: 17
        on right: 11
    else_stmt (50)
        on left: 18 19
        on right: 17
    assignment (51)
        on left: 20
        on right: 4
    a_expr (52)
        on left: 21 22 23
        on right: 21 22 31 33 34 39 40 52 53
    a_term (53)
        on left: 24 25 26
        on right: 21 22 23 24 25
    a_fact (54)
        on left: 27 28 29 30 31
        on right: 24 25 26 30
    varref (55)
        on left: 32 33 34
        on right: 13 20 27 34 50 51
    l_expr (56)
        on left: 35 36
        on right: 13 14 17 20 35
    l_term (57)
        on left: 37 38
        on right: 35 36 37
    l_fact (58)
        on left: 39 40 41
        on right: 37 38 40 41
    oprel (59)
        on left: 42 43 44 45 46 47
        on right: 40
    read (60)
        on left: 48
        on right: 5
    write (61)
        on left: 49
        on right: 6
    varlist (62)
        on left: 50 51
        on right: 48 51
    expr_list (63)
        on left: 52 53
        on right: 49 53


State 0

    0 $accept: . program $end

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    $default  reduce using rule 15 (repeat)

    program     go to state 9
    stmt_list   go to state 10
    stmt        go to state 11
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 1

   32 varref: T_ID .
   33       | T_ID . '[' a_expr ']'
   34       | T_ID . '[' varref ']' '[' a_expr ']'

    '['  shift, and go to state 21

    $default  reduce using rule 32 (varref)


State 2

   48 read: T_READ . varlist

    T_ID  shift, and go to state 1

    varref   go to state 22
    varlist  go to state 23


State 3

   49 write: T_WRITE . expr_list

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_expr     go to state 28
    a_term     go to state 29
    a_fact     go to state 30
    varref     go to state 31
    expr_list  go to state 32


State 4

   12 block: T_BEGIN . stmt_list T_END

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    $default  reduce using rule 15 (repeat)

    stmt_list   go to state 33
    stmt        go to state 11
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 5

   13 foreach: T_FOREACH . varref T_IN '(' l_expr ':' l_expr ')' stmt_list

    T_ID  shift, and go to state 1

    varref  go to state 34


State 6

   16 repeat: T_REPEAT . stmt_list T_UNTIL

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    $default  reduce using rule 15 (repeat)

    stmt_list   go to state 35
    stmt        go to state 11
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 7

   14 while: T_WHILE . '(' l_expr ')' repeat

    '('  shift, and go to state 36


State 8

   17 if_stmt: T_IF . l_expr T_THEN stmt_list T_ELSE else_stmt

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 38
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_expr  go to state 39
    l_term  go to state 40
    l_fact  go to state 41


State 9

    0 $accept: program . $end

    $end  shift, and go to state 42


State 10

    1 program: stmt_list . ';'
    2 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 43


State 11

    3 stmt_list: stmt .

    $default  reduce using rule 3 (stmt_list)


State 12

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 13

   10 stmt: foreach .

    $default  reduce using rule 10 (stmt)


State 14

    7 stmt: while .

    $default  reduce using rule 7 (stmt)


State 15

    8 stmt: repeat .

    $default  reduce using rule 8 (stmt)


State 16

   11 stmt: if_stmt .

    $default  reduce using rule 11 (stmt)


State 17

    4 stmt: assignment .

    $default  reduce using rule 4 (stmt)


State 18

   20 assignment: varref . T_ASSIGN l_expr

    T_ASSIGN  shift, and go to state 44


State 19

    5 stmt: read .

    $default  reduce using rule 5 (stmt)


State 20

    6 stmt: write .

    $default  reduce using rule 6 (stmt)


State 21

   33 varref: T_ID '[' . a_expr ']'
   34       | T_ID '[' . varref ']' '[' a_expr ']'

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_expr  go to state 45
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 46


State 22

   50 varlist: varref .
   51        | varref . ',' varlist

    ','  shift, and go to state 47

    $default  reduce using rule 50 (varlist)


State 23

   48 read: T_READ varlist .

    $default  reduce using rule 48 (read)


State 24

   28 a_fact: T_NUM .

    $default  reduce using rule 28 (a_fact)


State 25

   30 a_fact: T_SUB . a_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_fact  go to state 48
    varref  go to state 31


State 26

   29 a_fact: T_LITERAL_STR .

    $default  reduce using rule 29 (a_fact)


State 27

   31 a_fact: '(' . a_expr ')'

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_expr  go to state 49
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31


State 28

   21 a_expr: a_expr . T_ADD a_term
   22       | a_expr . T_SUB a_term
   52 expr_list: a_expr .
   53          | a_expr . ',' expr_list

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51
    ','    shift, and go to state 52

    $default  reduce using rule 52 (expr_list)


State 29

   23 a_expr: a_term .
   24 a_term: a_term . T_MUL a_fact
   25       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 53
    T_DIV  shift, and go to state 54

    $default  reduce using rule 23 (a_expr)


State 30

   26 a_term: a_fact .

    $default  reduce using rule 26 (a_term)


State 31

   27 a_fact: varref .

    $default  reduce using rule 27 (a_fact)


State 32

   49 write: T_WRITE expr_list .

    $default  reduce using rule 49 (write)


State 33

    2 stmt_list: stmt_list . ';' stmt
   12 block: T_BEGIN stmt_list . T_END

    T_END  shift, and go to state 55
    ';'    shift, and go to state 56


State 34

   13 foreach: T_FOREACH varref . T_IN '(' l_expr ':' l_expr ')' stmt_list

    T_IN  shift, and go to state 57


State 35

    2 stmt_list: stmt_list . ';' stmt
   16 repeat: T_REPEAT stmt_list . T_UNTIL

    T_UNTIL  shift, and go to state 58
    ';'      shift, and go to state 56


State 36

   14 while: T_WHILE '(' . l_expr ')' repeat

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 38
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_expr  go to state 59
    l_term  go to state 40
    l_fact  go to state 41


State 37

   31 a_fact: '(' . a_expr ')'
   41 l_fact: '(' . l_fact ')'

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 60
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_fact  go to state 61


State 38

   21 a_expr: a_expr . T_ADD a_term
   22       | a_expr . T_SUB a_term
   39 l_fact: a_expr .

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51

    $default  reduce using rule 39 (l_fact)


State 39

   17 if_stmt: T_IF l_expr . T_THEN stmt_list T_ELSE else_stmt
   35 l_expr: l_expr . T_AND l_term

    T_AND   shift, and go to state 62
    T_THEN  shift, and go to state 63


State 40

   36 l_expr: l_term .
   37 l_term: l_term . T_OR l_fact

    T_OR  shift, and go to state 64

    $default  reduce using rule 36 (l_expr)


State 41

   38 l_term: l_fact .
   40 l_fact: l_fact . oprel a_expr

    T_LT   shift, and go to state 65
    T_GT   shift, and go to state 66
    T_LEQ  shift, and go to state 67
    T_GEQ  shift, and go to state 68
    T_EQ   shift, and go to state 69
    T_NEQ  shift, and go to state 70

    $default  reduce using rule 38 (l_term)

    oprel  go to state 71


State 42

    0 $accept: program $end .

    $default  accept


State 43

    1 program: stmt_list ';' .
    2 stmt_list: stmt_list ';' . stmt

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    ';'       reduce using rule 15 (repeat)
    $default  reduce using rule 1 (program)

    stmt        go to state 72
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 44

   20 assignment: varref T_ASSIGN . l_expr

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 38
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_expr  go to state 73
    l_term  go to state 40
    l_fact  go to state 41


State 45

   21 a_expr: a_expr . T_ADD a_term
   22       | a_expr . T_SUB a_term
   33 varref: T_ID '[' a_expr . ']'

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51
    ']'    shift, and go to state 74


State 46

   27 a_fact: varref .
   34 varref: T_ID '[' varref . ']' '[' a_expr ']'

    ']'  shift, and go to state 75

    ']'       [reduce using rule 27 (a_fact)]
    $default  reduce using rule 27 (a_fact)


State 47

   51 varlist: varref ',' . varlist

    T_ID  shift, and go to state 1

    varref   go to state 22
    varlist  go to state 76


State 48

   30 a_fact: T_SUB a_fact .

    $default  reduce using rule 30 (a_fact)


State 49

   21 a_expr: a_expr . T_ADD a_term
   22       | a_expr . T_SUB a_term
   31 a_fact: '(' a_expr . ')'

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51
    ')'    shift, and go to state 77


State 50

   21 a_expr: a_expr T_ADD . a_term

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_term  go to state 78
    a_fact  go to state 30
    varref  go to state 31


State 51

   22 a_expr: a_expr T_SUB . a_term

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_term  go to state 79
    a_fact  go to state 30
    varref  go to state 31


State 52

   53 expr_list: a_expr ',' . expr_list

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_expr     go to state 28
    a_term     go to state 29
    a_fact     go to state 30
    varref     go to state 31
    expr_list  go to state 80


State 53

   24 a_term: a_term T_MUL . a_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_fact  go to state 81
    varref  go to state 31


State 54

   25 a_term: a_term T_DIV . a_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_fact  go to state 82
    varref  go to state 31


State 55

   12 block: T_BEGIN stmt_list T_END .

    $default  reduce using rule 12 (block)


State 56

    2 stmt_list: stmt_list ';' . stmt

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    $default  reduce using rule 15 (repeat)

    stmt        go to state 72
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 57

   13 foreach: T_FOREACH varref T_IN . '(' l_expr ':' l_expr ')' stmt_list

    '('  shift, and go to state 83


State 58

   16 repeat: T_REPEAT stmt_list T_UNTIL .

    $default  reduce using rule 16 (repeat)


State 59

   14 while: T_WHILE '(' l_expr . ')' repeat
   35 l_expr: l_expr . T_AND l_term

    T_AND  shift, and go to state 62
    ')'    shift, and go to state 84


State 60

   21 a_expr: a_expr . T_ADD a_term
   22       | a_expr . T_SUB a_term
   31 a_fact: '(' a_expr . ')'
   39 l_fact: a_expr .

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51
    ')'    shift, and go to state 77

    ')'       [reduce using rule 39 (l_fact)]
    $default  reduce using rule 39 (l_fact)


State 61

   40 l_fact: l_fact . oprel a_expr
   41       | '(' l_fact . ')'

    T_LT   shift, and go to state 65
    T_GT   shift, and go to state 66
    T_LEQ  shift, and go to state 67
    T_GEQ  shift, and go to state 68
    T_EQ   shift, and go to state 69
    T_NEQ  shift, and go to state 70
    ')'    shift, and go to state 85

    oprel  go to state 71


State 62

   35 l_expr: l_expr T_AND . l_term

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 38
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_term  go to state 86
    l_fact  go to state 41


State 63

   17 if_stmt: T_IF l_expr T_THEN . stmt_list T_ELSE else_stmt

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    $default  reduce using rule 15 (repeat)

    stmt_list   go to state 87
    stmt        go to state 11
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 64

   37 l_term: l_term T_OR . l_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 38
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_fact  go to state 88


State 65

   42 oprel: T_LT .

    $default  reduce using rule 42 (oprel)


State 66

   43 oprel: T_GT .

    $default  reduce using rule 43 (oprel)


State 67

   44 oprel: T_LEQ .

    $default  reduce using rule 44 (oprel)


State 68

   45 oprel: T_GEQ .

    $default  reduce using rule 45 (oprel)


State 69

   46 oprel: T_EQ .

    $default  reduce using rule 46 (oprel)


State 70

   47 oprel: T_NEQ .

    $default  reduce using rule 47 (oprel)


State 71

   40 l_fact: l_fact oprel . a_expr

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_expr  go to state 89
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31


State 72

    2 stmt_list: stmt_list ';' stmt .

    $default  reduce using rule 2 (stmt_list)


State 73

   20 assignment: varref T_ASSIGN l_expr .
   35 l_expr: l_expr . T_AND l_term

    T_AND  shift, and go to state 62

    $default  reduce using rule 20 (assignment)


State 74

   33 varref: T_ID '[' a_expr ']' .

    $default  reduce using rule 33 (varref)


State 75

   34 varref: T_ID '[' varref ']' . '[' a_expr ']'

    '['  shift, and go to state 90


State 76

   51 varlist: varref ',' varlist .

    $default  reduce using rule 51 (varlist)


State 77

   31 a_fact: '(' a_expr ')' .

    $default  reduce using rule 31 (a_fact)


State 78

   21 a_expr: a_expr T_ADD a_term .
   24 a_term: a_term . T_MUL a_fact
   25       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 53
    T_DIV  shift, and go to state 54

    $default  reduce using rule 21 (a_expr)


State 79

   22 a_expr: a_expr T_SUB a_term .
   24 a_term: a_term . T_MUL a_fact
   25       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 53
    T_DIV  shift, and go to state 54

    $default  reduce using rule 22 (a_expr)


State 80

   53 expr_list: a_expr ',' expr_list .

    $default  reduce using rule 53 (expr_list)


State 81

   24 a_term: a_term T_MUL a_fact .

    $default  reduce using rule 24 (a_term)


State 82

   25 a_term: a_term T_DIV a_fact .

    $default  reduce using rule 25 (a_term)


State 83

   13 foreach: T_FOREACH varref T_IN '(' . l_expr ':' l_expr ')' stmt_list

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 38
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_expr  go to state 91
    l_term  go to state 40
    l_fact  go to state 41


State 84

   14 while: T_WHILE '(' l_expr ')' . repeat

    T_REPEAT  shift, and go to state 6

    $default  reduce using rule 15 (repeat)

    repeat  go to state 92


State 85

   41 l_fact: '(' l_fact ')' .

    $default  reduce using rule 41 (l_fact)


State 86

   35 l_expr: l_expr T_AND l_term .
   37 l_term: l_term . T_OR l_fact

    T_OR  shift, and go to state 64

    $default  reduce using rule 35 (l_expr)


State 87

    2 stmt_list: stmt_list . ';' stmt
   17 if_stmt: T_IF l_expr T_THEN stmt_list . T_ELSE else_stmt

    T_ELSE  shift, and go to state 93
    ';'     shift, and go to state 56


State 88

   37 l_term: l_term T_OR l_fact .
   40 l_fact: l_fact . oprel a_expr

    T_LT   shift, and go to state 65
    T_GT   shift, and go to state 66
    T_LEQ  shift, and go to state 67
    T_GEQ  shift, and go to state 68
    T_EQ   shift, and go to state 69
    T_NEQ  shift, and go to state 70

    $default  reduce using rule 37 (l_term)

    oprel  go to state 71


State 89

   21 a_expr: a_expr . T_ADD a_term
   22       | a_expr . T_SUB a_term
   40 l_fact: l_fact oprel a_expr .

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51

    $default  reduce using rule 40 (l_fact)


State 90

   34 varref: T_ID '[' varref ']' '[' . a_expr ']'

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 27

    a_expr  go to state 94
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31


State 91

   13 foreach: T_FOREACH varref T_IN '(' l_expr . ':' l_expr ')' stmt_list
   35 l_expr: l_expr . T_AND l_term

    T_AND  shift, and go to state 62
    ':'    shift, and go to state 95


State 92

   14 while: T_WHILE '(' l_expr ')' repeat .

    $default  reduce using rule 14 (while)


State 93

   17 if_stmt: T_IF l_expr T_THEN stmt_list T_ELSE . else_stmt

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    T_END     reduce using rule 15 (repeat)
    T_END     [reduce using rule 18 (else_stmt)]
    T_UNTIL   reduce using rule 15 (repeat)
    T_UNTIL   [reduce using rule 18 (else_stmt)]
    T_ELSE    reduce using rule 15 (repeat)
    T_ELSE    [reduce using rule 18 (else_stmt)]
    ';'       reduce using rule 15 (repeat)
    ';'       [reduce using rule 18 (else_stmt)]
    $default  reduce using rule 15 (repeat)

    stmt        go to state 96
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    else_stmt   go to state 97
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 94

   21 a_expr: a_expr . T_ADD a_term
   22       | a_expr . T_SUB a_term
   34 varref: T_ID '[' varref ']' '[' a_expr . ']'

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51
    ']'    shift, and go to state 98


State 95

   13 foreach: T_FOREACH varref T_IN '(' l_expr ':' . l_expr ')' stmt_list

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 24
    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    '('            shift, and go to state 37

    a_expr  go to state 38
    a_term  go to state 29
    a_fact  go to state 30
    varref  go to state 31
    l_expr  go to state 99
    l_term  go to state 40
    l_fact  go to state 41


State 96

   19 else_stmt: stmt .

    $default  reduce using rule 19 (else_stmt)


State 97

   17 if_stmt: T_IF l_expr T_THEN stmt_list T_ELSE else_stmt .

    $default  reduce using rule 17 (if_stmt)


State 98

   34 varref: T_ID '[' varref ']' '[' a_expr ']' .

    $default  reduce using rule 34 (varref)


State 99

   13 foreach: T_FOREACH varref T_IN '(' l_expr ':' l_expr . ')' stmt_list
   35 l_expr: l_expr . T_AND l_term

    T_AND  shift, and go to state 62
    ')'    shift, and go to state 100


State 100

   13 foreach: T_FOREACH varref T_IN '(' l_expr ':' l_expr ')' . stmt_list

    T_ID       shift, and go to state 1
    T_READ     shift, and go to state 2
    T_WRITE    shift, and go to state 3
    T_BEGIN    shift, and go to state 4
    T_FOREACH  shift, and go to state 5
    T_REPEAT   shift, and go to state 6
    T_WHILE    shift, and go to state 7
    T_IF       shift, and go to state 8

    $default  reduce using rule 15 (repeat)

    stmt_list   go to state 101
    stmt        go to state 11
    block       go to state 12
    foreach     go to state 13
    while       go to state 14
    repeat      go to state 15
    if_stmt     go to state 16
    assignment  go to state 17
    varref      go to state 18
    read        go to state 19
    write       go to state 20


State 101

    2 stmt_list: stmt_list . ';' stmt
   13 foreach: T_FOREACH varref T_IN '(' l_expr ':' l_expr ')' stmt_list .

    ';'  shift, and go to state 56

    ';'       [reduce using rule 13 (foreach)]
    $default  reduce using rule 13 (foreach)
